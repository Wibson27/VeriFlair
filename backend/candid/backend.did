type Repository = record {
  name: text;
  description: opt text;
  language: opt text;
  stars: nat32;
  forks: nat32;
  commits: nat32;
  is_fork: bool;
};

type GitHubUser = record {
  login: text;
  name: opt text;
  bio: opt text;
  public_repos: nat32;
  followers: nat32;
  following: nat32;
  created_at: text;
};

// Definisi tipe data untuk transform
type HeaderField = record { text; text; };
type CanisterHttpResponsePayload = record {
  status: nat;
  headers: vec HeaderField;
  body: blob;
};
type TransformArgs = record {
  context: blob;
  response: CanisterHttpResponsePayload;
};

service : {
  "get_user_repositories_test": (text) -> (variant {
    Ok: vec Repository;
    Err: text;
  });
  "get_user_profile_test": (text) -> (variant {
    Ok: GitHubUser;
    Err: text;
  });
  // Menambahkan fungsi transform ke API publik
  "transform": (TransformArgs) -> (CanisterHttpResponsePayload) query;
}